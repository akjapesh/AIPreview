events {}

http {
    #rate limiter
    limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=10r/s;
    # Define  "backend_servers"
    upstream backend_servers {
        server go-backend:8080 max_fails=3 fail_timeout=5s;           # Instead of specifying individual containers, use the service name from docker-compose Docker's internal DNS will resolve multiple replicas automatically

    }

    # Define the reverse proxy server
    server {
        # Nginx Listen on port 80
        listen 80;

        
        location / {
            limit_req zone=api_rate_limit burst=20 nodelay;

            # Custom error response for rate-limited requests (HTTP 429)
            limit_req_status 429;
            # Forward all requests to the backend_servers group
            proxy_pass http://backend_servers;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            
        }
        # Optional: Custom error page for rate limits
        error_page 429 /ratelimit.html;
        location = /ratelimit.html {
            internal;
            return 429 '{"error": "Too many requests. Try again later."}';
            add_header Content-Type application/json;
        }
    }
}
